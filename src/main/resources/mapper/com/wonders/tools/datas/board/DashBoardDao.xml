<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.linlan.tools.board.dao.DashBoardDao">

    <!-- 采用别名使用类成员变量，可根据需求，确定是否启用 -->
    <resultMap type="io.linlan.tools.board.entity.DashBoard" id="dashBoardMap">
        <id property="id" column="BOARD_ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="appId" column="APP_ID"/>
        <result property="folderId" column="FOLDER_ID"/>
        <result property="name" column="NAME"/>
        <result property="layout" column="CONTENT"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="lastTime" column="LAST_TIME"/>
        <result property="description" column="DESCRIPTION"/>
        <!-- 新增外键的名称信息，用于展示使用 -->
        <result property="folderIsPrivate" column="FOLDERISPRIVATE"/>
    </resultMap>

    <!-- find by id，通过主键获取对象 -->
    <select id="findById" resultMap="dashBoardMap">
        SELECT B.*
        ,u.name   AS realName
        ,u.username  AS username
        ,f.name AS folderName
        ,f.is_private AS folderIsPrivate
        FROM DASH_BOARD B
        LEFT JOIN DASH_ADMIN_USER u ON u.user_id = B.user_id
        LEFT JOIN DASH_FOLDER f ON f.folder_id = B.folder_id
        WHERE BOARD_ID = #{value}
    </select>

    <!-- get list，通过输入的条件，获取返回的list列表对象
    如果offset和limit不为空（Query对象传入），则采用相应的分页规则和commonList内的条件，
        查询出相应记录并进行分页处理取出offset页的limit条记录
    否则，根据commonList内的条件取出全部记录
    全部列表的参数详见commonList内的各个条件说明
    -->
    <select id="getList" resultMap="dashBoardMap">
        SELECT B.*
        ,u.name   AS realName
        ,u.username  AS username
        ,f.name AS folderName
        ,f.is_private AS folderIsPrivate
        FROM DASH_BOARD B
        LEFT JOIN DASH_ADMIN_USER u ON u.user_id = B.user_id
        LEFT JOIN DASH_FOLDER f ON f.folder_id = B.folder_id
        <if test="userId != null">
            WHERE
            #{userId} = '${admin_user_id}'
            OR B.user_id = #{userId}
            OR B.board_id IN (
            SELECT
                res_id
            FROM
                DASH_ADMIN_USER_ROLE ur
            LEFT JOIN DASH_ADMIN_ROLE_RES rr ON ur.role_id = rr.role_id
            WHERE
                ur.user_id = #{userId} AND rr.res_type = 'board'
        )
        </if>
        <if test="adminId != null">
            WHERE
            #{adminId} = '${admin_user_id}'
            OR B.user_id = #{adminId}
            OR B.board_id IN (
            SELECT
            res_id
            FROM
            DASH_ADMIN_ROLE r
            LEFT JOIN DASH_ADMIN_ROLE_RES rr ON r.role_id = rr.role_id
            WHERE
            r.user_id = #{adminId} AND rr.res_type = 'board'
            )
        </if>
        <if test="folderIds != null">
            WHERE B.folder_id IN
            <foreach item="item" index="index" collection="folderIds" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY B.NAME
    </select>

    <!-- sql commonList 通过输入的条件，获取返回的list列表对象
    -->
    <sql id="commonList">
        <if test="userId != null" >and  user_id = #{userId}</if>
        <if test="boardId != null" >
            <![CDATA[
            AND board_id <> #{boardId}
            ]]>
        </if>
        <if test='name != null and name.trim() != ""'> AND name = #{name}</if>
        <if test="folderId != null" >AND folder_id = #{folderId}</if>

    </sql>

    <!-- save object，保存对象信息 -->
    <insert id="save" parameterType="io.linlan.tools.board.entity.DashBoard">
        INSERT INTO DASH_BOARD
        (
        BOARD_ID, 
        USER_ID, APP_ID, FOLDER_ID, NAME, CONTENT, CREATE_TIME, LAST_TIME, DESCRIPTION)
        VALUES
        (
        <choose>
            <when test='id != null'>#{id},  </when>
            <otherwise>  sys_guid() ,  </otherwise>
        </choose>
        #{userId}, #{appId, jdbcType=VARCHAR}, #{folderId, jdbcType=BIGINT}, #{name}, #{layout}, #{createTime}, #{lastTime}, #{description, jdbcType=VARCHAR}
       <!-- <choose>
            <when test="folderId == null">
                null
            </when>
            <otherwise>
                #{folderId}
            </otherwise>
        </choose>-->
        )
    </insert>

    <!-- update object，更新对象信息 -->
    <update id="update" parameterType="io.linlan.tools.board.entity.DashBoard">
        UPDATE DASH_BOARD
        <set>
            <if test="userId != null">USER_ID = #{userId}, </if>
            <if test="appId != null">APP_ID = #{appId}, </if>
            <if test="folderId != null">FOLDER_ID = #{folderId}, </if>
            <if test="name != null">NAME = #{name}, </if>
            <if test="layout != null">CONTENT = #{layout}, </if>
            <if test="createTime != null">CREATE_TIME = #{createTime}, </if>
            <if test="lastTime != null">LAST_TIME = #{lastTime}, </if>
            <if test="description != null">DESCRIPTION = #{description}</if>
        </set>
        WHERE BOARD_ID = #{id}
    </update>

    <!-- delete by id，通过主键删除对象 -->
    <delete id="deleteById">
        DELETE FROM DASH_BOARD
        WHERE BOARD_ID = #{value}
    </delete>

    <!-- delete by ids，通过主键数组批量删除对象 -->
    <delete id="deleteByIds">
        DELETE FROM DASH_BOARD
        WHERE BOARD_ID IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- query total，通过输入的条件，查询返回结果的数量，返回值为int -->
    <select id="getCount" resultType="int">
        SELECT COUNT(*) FROM
        DASH_BOARD B
        WHERE 1 = 1
        <include refid="commonList"></include>
        <!-- 可以增加查询条件 -->
        ${filterSql}
    </select>

    <!-- 以下为新增特定的操作 -->
    <select id="checkBoardRole" resultType="int">
        SELECT
            count(1)
        FROM
            DASH_BOARD
        WHERE
            board_id = #{arg1}
        AND (
            #{arg0} = '${admin_user_id}'
            OR user_id = #{arg0}
            OR board_id IN (
                SELECT
                    res_id
                FROM
                    DASH_ADMIN_USER_ROLE ur
                LEFT JOIN DASH_ADMIN_ROLE_RES rr ON ur.role_id = rr.role_id
                WHERE
                    ur.user_id = #{arg0} AND rr.res_type = 'board' AND rr.permission LIKE #{arg2})
            )
    </select>

    <select id="getBoardParam" resultType="io.linlan.tools.board.entity.DashBoardParam">
        SELECT
            param_id id,
            user_id userId,
            board_id boardId,
            content
        FROM
            DASH_BOARD_PARAM
        WHERE
            board_id = #{arg0} AND user_id = #{arg1}
    </select>

    <insert id="saveBoardParam" parameterType="io.linlan.tools.board.entity.DashBoardParam">
        <![CDATA[
        INSERT INTO DASH_BOARD_PARAM (param_id, user_id, board_id, content)
        VALUES
        (
            #{userId},#{boardId},#{config}
        )
        ]]>
    </insert>

    <delete id="deleteBoardParam">
        DELETE
        FROM
            DASH_BOARD_PARAM
        WHERE
            board_id = #{arg0} and user_id = #{arg1}
    </delete>

</mapper>